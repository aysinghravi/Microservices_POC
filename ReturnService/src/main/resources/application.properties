spring.jackson.serialization.FAIL_ON_EMPTY_BEANS=false
logging.level.org.springframework.web = debug

spring.main.allow-circular-references = true

spring.kafka.consumer.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=return
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer= org.springframework.kafka.support.serializer.JsonDeserializer

spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.topic.name=shipment_topic

spring.kafka.producer.key-serializer = org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer = org.springframework.kafka.support.serializer.JsonSerializer

keycloak.realm = Microservice
keycloak.auth-server-url = http://localhost:8080
keycloak.resource = Microservice-Return
keycloak.public-client=true
keycloak.bearer-only=true

wmq.host.name=3.111.2.253
wmq.port=1414
wmq.channel=SYSTEM.ADMIN.SVRCONN
wmq.connection.mode=1
wmq.queue.manager=OM_QMGR
wmq.ssl.cipher.suite=TLS_ECDHE_RSA_WITH_AES_128_GCM_SHA256
wmq.user.auth.mqcp=false
wmq.ssl.enable=false

ibm.cipher.mappings=false
ibm.javax.ssl.keystore=D:/myProjects/DIV/setup/newmnskeystore.jks
ibm.javax.ssl.keystore.pwd=passw0rd
ibm.javax.ssl.truststore=D:/myProjects/DIV/setup/newmstruststore.jks
ibm.javax.ssl.truststore.pwd=secret4ever
ibm.javax.ssl.context=TLSv1.2

jmsmq.listener.queue.name=queueName


